

----------------------------------------------
-- Employee data table structure
create table employee_data(
    I_Emp_id INT GENERATED ALWAYS AS IDENTITY primary key,
    v_name   varchar,
    D_date_of_joining date,
    V_email varchar,
    V_position varchar ,
    I_manager_id  int references employee_data(I_Emp_id)

);



-- Table data of employee
insert into employee_data(v_name,D_date_of_joining,V_email,V_position,I_manager_id) values
                            ('Rama','2014-02-20','ram@gmail.com','SE1',null),
                            ('vara','2014-02-20','vara@gmail.com','SE1',21),
                            ('prasad','2014-02-20','prasad@gmail.com','SE1',8),
                            ('swami','2014-02-20','swami@gmail.com','SE1',18),
                            ('manoj','2014-02-20','manoj@gmail.com','SE1',17),
                            ('aneesh','2014-02-20','aneesh@gmail.com','SE1',15),
                            ('yeswanth','2014-02-20','yeswanth@gmail.com','SE1',3),
                            ('mohan','2014-02-20','mohan@gmail.com','SE1',9),
                            ('ramya','2014-02-20','ramya@gmail.com','SE1',18),
                            ('priya','2014-02-20','priya@gmail.com','SE1',12),
                            ('lakshmi','2014-02-20','lakshmi@gmail.com','SE1',21),
                            ('surya','2014-02-20','surya@gmail.com','SE1',13),
                            ('karthik','2014-02-20','karthik@gmail.com','SE1',10),
                            ('pavan','2014-02-20','pavan@gmail.com','SE1',6),
                            ('jaya','2014-02-20','jaya@gmail.com','SE1',4),
                            ('nag','2014-02-20','nag@gmail.com','SE1',2),
                            ('kumar','2014-02-20','kumar@gmail.com','SE1',1),
                            ('sita','2014-02-20','sita@gmail.com','SE1',24),
                            ('raj','2014-02-20','raj@gmail.com','SE1',20),
                            ('sindhu','2014-02-20','sindhu@gmail.com','SE1',12),
                            ('akbar','2014-02-20','akbar@gmail.com','SE1',19),
                            ('Manu','2014-02-20','Manu@gmail.com','SE1',14),
                            ('kareem','2014-02-20','kareem@gmail.com','SE1',17),
                            ('Martin','2014-02-20','Martin@gmail.com','SE1',17)
;



-- Table to visualise the hierarchy level
 with recursive emp_data_par as
(   
    --finds the employee who has no managers
    select I_Emp_id,v_name ,'{} '::int[] as higher_auth, 0 as level
    from employee_data
    where i_manager_id is NULL

    union all 

    --recurse the iteration till end who was not managing
    select c.I_Emp_id, c.v_name, higher_auth || c.i_manager_id, level+1
            from emp_data_par p
            join employee_data c
            on c.i_manager_id = p.I_Emp_id
            where not c.I_Emp_id = any(higher_auth)
)select * from emp_data_par;



--function to create json format of hierarchy
CREATE OR REPLACE FUNCTION json_tree_emp(I_root_id int) RETURNS JSONB AS
$$
declare 
  V_name_s varchar;
  V_desig varchar;
BEGIN
  SELECT v_name ,V_position into V_name_s, V_desig FROM employee_data WHERE I_Emp_id = I_root_id;
  --json object structure 
  RETURN json_build_object('I_Emp_id',I_root_id,'v_name',V_name_s,'Position',V_desig,'c_manage',
                                                                                    array(
                                                                                    SELECT json_tree_emp(I_Emp_id)
                                                                                    FROM employee_data 
                                                                                    WHERE i_manager_id = I_root_id
                                                                                    ) );
END;
$$ LANGUAGE PLPGSQL;

-- call the function with argument of employee id
SELECT jsonb_pretty(json_tree_emp(1));







--------------------------NEW __-function _with DBLINK---------------------------






--installig dblink
CREATE EXTENSION dblink;


--Employee table structure
select dblink('dbname=dbl_test options=-csearch_path=',
'create table emp_schema.employee_data(
    I_Emp_id INT GENERATED BY DEFAULT  AS IDENTITY primary key,
    v_name   varchar,
    D_date_of_joining date,
    V_email varchar,
    V_position varchar ,
    I_manager_id  int --references emp_schema.employee_data(I_Emp_id)

)');


--employee data
INSERT INTO emp_schema.employee_data (v_name,D_date_of_joining,V_email,V_position,I_manager_id)
SELECT v_name,D_date_of_joining,V_email,V_position,I_manager_id FROM json_populate_recordset (NULL::emp_schema.employee_data,
'[
   
{ "v_name": "Rama","d_date_of_joining": "2014-02-20","v_email": "ram@gmail.com","v_position": "SE1","i_manager_id": null},
{ "v_name": "vara","d_date_of_joining": "2014-02-20","v_email": "vara@gmail.com","v_position": "SE1","i_manager_id": 21},
{ "v_name": "prasad","d_date_of_joining": "2014-02-20","v_email": "prasad@gmail.com","v_position": "SE1","i_manager_id": 20},
{ "v_name": "swami","d_date_of_joining": "2014-02-20","v_email": "swami@gmail.com","v_position": "SE1","i_manager_id": 14},
{ "v_name": "manoj","d_date_of_joining": "2014-02-20","v_email": "manoj@gmail.com","v_position": "SE1","i_manager_id": 8},
{ "v_name": "aneesh","d_date_of_joining": "2014-02-20","v_email": "aneesh@gmail.com","v_position": "SE1","i_manager_id": 18},
{ "v_name": "yeswanth","d_date_of_joining": "2014-02-20","v_email": "yeswanth@gmail.com","v_position": "SE1","i_manager_id": 17},
{ "v_name": "mohan","d_date_of_joining": "2014-02-20","v_email": "mohan@gmail.com","v_position": "SE1","i_manager_id": 15},
{ "v_name": "ramya","d_date_of_joining": "2014-02-20","v_email": "ramya@gmail.com","v_position": "SE1","i_manager_id": 19},
{ "v_name": "priya","d_date_of_joining": "2014-02-20","v_email": "priya@gmail.com","v_position": "SE1","i_manager_id": 3},
{ "v_name": "lakshmi","d_date_of_joining": "2014-02-20","v_email": "lakshmi@gmail.com","v_position": "SE1","i_manager_id": 9},
{ "v_name": "surya","d_date_of_joining": "2014-02-20","v_email": "surya@gmail.com","v_position": "SE1","i_manager_id": 18},
{ "v_name": "karthik","d_date_of_joining": "2014-02-20","v_email": "karthik@gmail.com","v_position": "SE1","i_manager_id": 12},
{ "v_name": "pavan","d_date_of_joining": "2014-02-20","v_email": "pavan@gmail.com","v_position": "SE1","i_manager_id": 12},
{ "v_name": "jaya","d_date_of_joining": "2014-02-20","v_email": "jaya@gmail.com","v_position": "SE1","i_manager_id": 21},
{ "v_name": "nag","d_date_of_joining": "2014-02-20","v_email": "nag@gmail.com","v_position": "SE1","i_manager_id": 17},
{ "v_name": "kumar","d_date_of_joining": "2014-02-20","v_email": "kumar@gmail.com","v_position": "SE1","i_manager_id": 13},
{ "v_name": "sita","d_date_of_joining": "2014-02-20","v_email": "sita@gmail.com","v_position": "SE1","i_manager_id": 24},
{ "v_name": "raj","d_date_of_joining": "2014-02-20","v_email": "raj@gmail.com","v_position": "SE1","i_manager_id": 10},
{ "v_name": "sindhu","d_date_of_joining": "2014-02-20","v_email": "sindhu@gmail.com","v_position": "SE1","i_manager_id": 6},
{ "v_name": "akbar","d_date_of_joining": "2014-02-20","v_email": "akbar@gmail.com","v_position": "SE1","i_manager_id": 4},
{ "v_name": "Manu","d_date_of_joining": "2014-02-20","v_email": "Manu@gmail.com","v_position": "SE1","i_manager_id": 2},
{ "v_name": "kareem","d_date_of_joining": "2014-02-20","v_email": "kareem@gmail.com","v_position": "SE1","i_manager_id": 17},
{ "v_name": "Martin","d_date_of_joining": "2014-02-20","v_email": "Martin@gmail.com","v_position": "SE1","i_manager_id": 1}
    
  ]');


--alter manager_id column  as referenced to employee id 
ALTER TABLE emp_schema.employee_data ADD CONSTRAINT i_manager_id FOREIGN KEY (i_manager_id) references emp_schema.employee_data(I_Emp_id);


--select * from emp_schema.employee_data;
--drop table emp_schema.employee_data;

--recursive to visualise the hierarchy in table format  
  with recursive emp_data_par as
(   
    --finds the employee who has no managers
    select I_Emp_id,v_name ,'{} '::int[] as higher_auth, 0 as level
    from  emp_schema.employee_data
    where i_manager_id is NULL

    union all 

    --recurse the iteration till end who was not managing
    select c.I_Emp_id, c.v_name, higher_auth || c.i_manager_id, level+1
            from emp_data_par p
            join  emp_schema.employee_data c
            on c.i_manager_id = p.I_Emp_id
            where not c.I_Emp_id = any(higher_auth)
)select * from emp_data_par;


-- function to make the hierarchy of manager employee in json format 
CREATE OR REPLACE FUNCTION json_tree_emp(I_root_id int) RETURNS JSONB AS
$$
declare 
  V_name_s varchar;
  V_desig varchar;
BEGIN
-- find if the manager id is there or not
perform 1 from emp_schema.employee_data where I_Emp_id = I_root_id limit 1;
if not found
then 
--if manager id is not found then insert as employee in table using dblink
SELECT  from dblink('dbname=dbl_test ',
   format( 'insert into emp_schema.employee_data (I_Emp_id) values (%s)',I_root_id));
end if ;
  SELECT v_name ,V_position into V_name_s, V_desig FROM  emp_schema.employee_data WHERE I_Emp_id = I_root_id;
  RETURN json_build_object('I_Emp_id',I_root_id,'v_name',V_name_s,'Position',V_desig,'c_manage',
                        array(
                        SELECT json_tree_emp(I_Emp_id)
                        FROM  emp_schema.employee_data 
                        WHERE i_manager_id = I_root_id
                        ) );

END;
$$ LANGUAGE PLPGSQL;

-- give the argument of manager id
select jsonb_pretty(json_tree_emp(31));


